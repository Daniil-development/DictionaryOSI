<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ASf6IARf/pAJf/8kJP8=
</value>
  </data>
</root>